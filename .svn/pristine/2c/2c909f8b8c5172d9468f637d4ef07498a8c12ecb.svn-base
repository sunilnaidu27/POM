<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="555759" started-at="2020-10-08T06:54:53Z" finished-at="2020-10-08T07:04:08Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="555759" started-at="2020-10-08T06:54:53Z" finished-at="2020-10-08T07:04:08Z">
      <class name="testScripts.NewLL">
        <test-method status="PASS" signature="beforesuite()[pri:0, instance:testScripts.NewLL@1fc2b765]" name="beforesuite" is-config="true" duration-ms="234" started-at="2020-10-08T06:54:52Z" finished-at="2020-10-08T06:54:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforesuite -->
        <test-method status="PASS" signature="Start()[pri:0, instance:testScripts.NewLL@1fc2b765]" name="Start" is-config="true" duration-ms="0" started-at="2020-10-08T06:54:53Z" depends-on-methods="frameworkLibrary.BaseClass.beforesuite" finished-at="2020-10-08T06:54:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Start -->
        <test-method status="PASS" signature="beforemethod(org.testng.ITestContext)[pri:0, instance:testScripts.NewLL@1fc2b765]" name="beforemethod" is-config="true" duration-ms="1242" started-at="2020-10-08T06:54:53Z" finished-at="2020-10-08T06:54:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@615dbdd0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="Predatacheck()[pri:0, instance:testScripts.NewLL@1fc2b765]" name="Predatacheck" is-config="true" duration-ms="450" started-at="2020-10-08T06:54:54Z" finished-at="2020-10-08T06:54:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Predatacheck -->
        <test-method status="FAIL" signature="NewLL_Public()[pri:0, instance:testScripts.NewLL@1fc2b765]" name="NewLL_Public" duration-ms="299404" started-at="2020-10-08T06:54:54Z" finished-at="2020-10-08T06:59:54Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at frameworkLibrary.ReportLibrary.reportEvent(ReportLibrary.java:72)
at applicationPages.Login_CapturebiometricsPage.Clickon_Snapokbutton(Login_CapturebiometricsPage.java:166)
at applicationPages.Flows.CapturePhotoandSignature(Flows.java:191)
at applicationPages.Flows.Initiate_RTO_Flows(Flows.java:151)
at applicationPages.Flows.RTOLevel_Status(Flows.java:127)
at applicationPages.Flows.Initiate_RTO_Flows(Flows.java:146)
at applicationPages.Flows.RTOLevel_Status(Flows.java:127)
at applicationPages.Flows.VerifyFlows(Flows.java:97)
at applicationPages.UniversalState.PerformJob(UniversalState.java:203)
at testScripts.NewLL.NewLL_Public(NewLL.java:44)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NewLL_Public -->
        <test-method status="PASS" signature="CloseBrowsers()[pri:0, instance:testScripts.NewLL@1fc2b765]" name="CloseBrowsers" is-config="true" duration-ms="0" started-at="2020-10-08T06:59:54Z" finished-at="2020-10-08T06:59:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseBrowsers -->
        <test-method status="PASS" signature="aftermethod(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:testScripts.NewLL@1fc2b765]" name="aftermethod" is-config="true" duration-ms="735" started-at="2020-10-08T06:59:54Z" finished-at="2020-10-08T06:59:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NewLL_Public status=FAILURE method=NewLL.NewLL_Public()[pri:0, instance:testScripts.NewLL@1fc2b765] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@615dbdd0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(org.testng.ITestContext)[pri:0, instance:testScripts.NewLL@1fc2b765]" name="beforemethod" is-config="true" duration-ms="187" started-at="2020-10-08T06:59:54Z" finished-at="2020-10-08T06:59:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@615dbdd0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="Predatacheck()[pri:0, instance:testScripts.NewLL@1fc2b765]" name="Predatacheck" is-config="true" duration-ms="216" started-at="2020-10-08T06:59:55Z" finished-at="2020-10-08T06:59:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Predatacheck -->
        <test-method status="PASS" signature="NewLL_Public()[pri:0, instance:testScripts.NewLL@1fc2b765]" name="NewLL_Public" duration-ms="253200" started-at="2020-10-08T06:59:55Z" finished-at="2020-10-08T07:04:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NewLL_Public -->
        <test-method status="PASS" signature="aftermethod(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:testScripts.NewLL@1fc2b765]" name="aftermethod" is-config="true" duration-ms="288" started-at="2020-10-08T07:04:08Z" finished-at="2020-10-08T07:04:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NewLL_Public status=SUCCESS method=NewLL.NewLL_Public()[pri:0, instance:testScripts.NewLL@1fc2b765] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@615dbdd0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="CloseBrowsers()[pri:0, instance:testScripts.NewLL@1fc2b765]" name="CloseBrowsers" is-config="true" duration-ms="0" started-at="2020-10-08T07:04:08Z" finished-at="2020-10-08T07:04:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseBrowsers -->
        <test-method status="PASS" signature="End()[pri:0, instance:testScripts.NewLL@1fc2b765]" name="End" is-config="true" duration-ms="31" started-at="2020-10-08T07:04:08Z" finished-at="2020-10-08T07:04:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- End -->
        <test-method status="PASS" signature="aftersuite()[pri:0, instance:testScripts.NewLL@1fc2b765]" name="aftersuite" is-config="true" duration-ms="5986" started-at="2020-10-08T07:04:08Z" depends-on-methods="testScripts.NewLL.End" finished-at="2020-10-08T07:04:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftersuite -->
      </class> <!-- testScripts.NewLL -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
